const CARDS = [
	{ id: 1, question: "O que é JSX?", answer: "Uma extensão da linguagem JavaScript" },
	{ id: 2, question: "O React é __", answer: "Uma biblioteca JavaScript para construção de interfaces" },
	{ id: 3, question: "Componentes devem iniciar com __", answer: "Letra maiúscula" },
	{ id: 4, question: "Podemos colocar __ dentro do JSX", answer: "expressões" },
	{ id: 5, question: "O ReactDOM nos ajuda __", answer: "Interagindo com a DOM para colocar componentes React na mesma" },
	{ id: 6, question: "Usamos o npm para __", answer: "Gerenciar os pacotes necessários e suas dependências" },
	{ id: 7, question: "Usamos props para __", answer: "Passar diferentes informações para componentes" },
	{ id: 8, question: "Usamos estado (state) para __", answer: "Dizer para o React quais informações quando atualizadas devem renderizar a tela novamente" },
	{ id: 9, question: "O que é React?", answer: "React é uma biblioteca JavaScript para construir interfaces de usuário." },
	{ id: 10, question: "O que são componentes em React?", answer: "Componentes em React são funções ou classes que retornam JSX e representam uma parte da interface do usuário." },
	{ id: 11, question: "Qual a diferença entre componentes de classe e componentes funcionais?", answer: "Componentes de classe utilizam a sintaxe de classes e possuem métodos de ciclo de vida, enquanto componentes funcionais são funções simples e podem usar hooks." },
	{ id: 12, question: "O que são hooks em React?", answer: "Hooks são funções que permitem usar o estado e outros recursos de React em componentes funcionais." },
	{ id: 13, question: "O que é o useState em React?", answer: "O useState é um hook que permite adicionar o estado local a um componente funcional." },
	{ id: 14, question: "Como se cria um componente funcional em React?", answer: "Você cria um componente funcional em React declarando uma função que retorna JSX." },
	{ id: 15, question: "O que é o useEffect em React?", answer: "O useEffect é um hook que permite realizar efeitos colaterais, como chamadas de API ou manipulação do DOM, em componentes funcionais." },
	{ id: 16, question: "Qual é a função do método render() em um componente de classe?", answer: "O método render() é responsável por retornar o JSX a ser exibido pelo componente de classe." },
	{ id: 17, question: "O que é a virtual DOM?", answer: "A virtual DOM é uma representação em memória do DOM real, que o React utiliza para otimizar as atualizações da interface do usuário." },
	{ id: 18, question: "O que é a prop 'key' em React?", answer: "A prop 'key' é usada para identificar de forma única os elementos em uma lista, ajudando o React a otimizar as renderizações." },
	{ id: 19, question: "O que é o método map() em JavaScript?", answer: "O método map() é usado para criar um novo array aplicando uma função a cada item de um array existente." },
	{ id: 20, question: "O que é o método filter() em JavaScript?", answer: "O método filter() cria um novo array com todos os elementos que passam em um teste, fornecido como função." },
	{ id: 21, question: "O que é o método reduce() em JavaScript?", answer: "O método reduce() aplica uma função acumuladora a cada elemento de um array, resultando em um único valor." },
	{ id: 22, question: "O que são variáveis em JavaScript?", answer: "Variáveis em JavaScript são usadas para armazenar dados, e podem ser declaradas usando var, let ou const." },
	{ id: 23, question: "O que é a diferença entre 'let' e 'const' em JavaScript?", answer: "O 'let' permite a reatribuição de um valor, enquanto 'const' não permite que o valor de uma variável seja reatribuído." },
	{ id: 24, question: "O que é uma função anônima em JavaScript?", answer: "Uma função anônima é uma função que não tem nome e é geralmente atribuída a uma variável ou passada como argumento." },
	{ id: 25, question: "O que é a hoisting em JavaScript?", answer: "Hoisting é o comportamento do JavaScript de mover declarações de variáveis e funções para o topo do seu contexto de execução." },
	{ id: 26, question: "O que é o operador '===' em JavaScript?", answer: "O operador '===' é o operador de comparação estrita, que compara valores e tipos de dados." },
	{ id: 27, question: "O que são promises em JavaScript?", answer: "Promises são objetos que representam a conclusão ou falha de uma operação assíncrona e permitem encadear ações com .then() ou .catch()." },
	{ id: 28, question: "O que é o 'this' em JavaScript?", answer: "O 'this' em JavaScript se refere ao contexto de execução da função, geralmente o objeto que invoca a função." },
	{ id: 29, question: "O que é o método .map() em React?", answer: ".map() é um método JavaScript utilizado para iterar sobre um array e retornar um novo array com os elementos modificados, muito utilizado para renderizar listas em React." },
	{ id: 30, question: "O que significa o termo 'props' em React?", answer: "Props são propriedades passadas de um componente pai para um componente filho em React." },
	{ id: 31, question: "O que é o ciclo de vida de um componente em React?", answer: "O ciclo de vida de um componente em React descreve as fases pelas quais um componente passa, como montagem, atualização e desmontagem." },
	{ id: 32, question: "O que é o conceito de 'state' em React?", answer: "State é um objeto que armazena dados internos de um componente e pode ser alterado ao longo do tempo, causando re-renderização." },
	{ id: 33, question: "Como você passa dados de um componente pai para um componente filho?", answer: "Você passa dados de um componente pai para um filho utilizando props." },
	{ id: 34, question: "O que são eventos em React?", answer: "Eventos em React são ações que ocorrem em resposta a interações do usuário, como cliques e digitação." },
	{ id: 35, question: "O que significa 'renderização condicional' em React?", answer: "Renderização condicional é o processo de exibir componentes diferentes ou elementos com base em uma condição, geralmente usando estruturas como if ou operador ternário." },
	{ id: 36, question: "O que são fragments em React?", answer: "Fragments são uma maneira de agrupar múltiplos elementos filhos sem adicionar nós extras no DOM." },
	{ id: 37, question: "O que é a função setState() em React?", answer: "A função setState() é usada para atualizar o estado de um componente em React." },
	{ id: 38, question: "O que é o spread operator em JavaScript?", answer: "O spread operator (...) permite expandir ou copiar elementos de um array ou objeto." },
	{ id: 39, question: "O que é o conceito de 'destructuring' em JavaScript?", answer: "Destructuring é uma maneira de extrair valores de arrays ou objetos e atribuí-los a variáveis de forma mais concisa." },
	{ id: 40, question: "O que é um array em JavaScript?", answer: "Um array é uma estrutura de dados que armazena uma lista de elementos, que podem ser acessados por índice." },
	{ id: 41, question: "O que é o conceito de 'callbacks' em JavaScript?", answer: "Callbacks são funções passadas como argumento para outra função e executadas após a conclusão da tarefa ou operação." },
	{ id: 42, question: "O que significa 'async/await' em JavaScript?", answer: "'async/await' é uma forma de escrever código assíncrono de maneira mais legível, usando promessas." },
	{ id: 43, question: "Qual é a principal diferença entre uma função regular e uma função de seta (arrow function) em JavaScript?", answer: "Arrow functions são funções anônimas com sintaxe mais curta e não possuem seu próprio 'this', elas herdam o 'this' do contexto em que foram definidas." },
	{ id: 44, question: "O que são módulos em JavaScript?", answer: "Módulos em JavaScript são arquivos ou blocos de código que podem ser importados e exportados entre diferentes partes de uma aplicação." },
	{ id: 45, question: "O que é o método 'bind()' em JavaScript?", answer: "O método bind() cria uma nova função que, quando chamada, tem seu 'this' e parâmetros definidos explicitamente." },
	{ id: 46, question: "O que é um objeto em JavaScript?", answer: "Um objeto é uma coleção de propriedades e valores, onde cada propriedade é uma chave que mapeia para um valor." },
	{ id: 47, question: "Como você pode adicionar elementos em um array em JavaScript?", answer: "Você pode adicionar elementos em um array usando métodos como .push() ou .unshift()." },
	{ id: 48, question: "O que são os 'event handlers' em React?", answer: "Event handlers em React são funções que respondem a eventos, como cliques ou mudanças de input, e são passadas como props para os componentes." },
	{ id: 49, question: "O que é o conceito de 'immutable' em JavaScript?", answer: "'Immutable' significa que o valor de uma variável ou objeto não pode ser alterado depois de definido." },
	{ id: 50, question: "O que são 'Higher-Order Components' (HOCs) em React?", answer: "HOCs são funções que recebem um componente e retornam um novo componente, geralmente para adicionar funcionalidades ou lógica reutilizável." },
	{ id: 51, question: "O que são 'ref' em React?", answer: "'ref' é uma maneira de acessar diretamente um elemento do DOM ou uma instância de um componente." },
	{ id: 52, question: "Como você pode manipular o DOM em React?", answer: "Você deve evitar manipulações diretas do DOM em React e usar o estado e props para atualizar a interface." },
	{ id: 53, question: "O que é o 'context' em React?", answer: "O context em React é uma forma de passar dados profundamente pela árvore de componentes sem precisar usar props manualmente em cada nível." },
	{ id: 54, question: "Qual a diferença entre 'null' e 'undefined' em JavaScript?", answer: "'null' é um valor atribuído explicitamente a uma variável para representar a ausência de valor, enquanto 'undefined' é o valor padrão para variáveis não inicializadas." },
	{ id: 55, question: "O que é a função 'setTimeout()' em JavaScript?", answer: "A função setTimeout() executa uma função ou um pedaço de código depois de um certo período de tempo especificado." }
]


export default CARDS